{
  "name": "@unocss/monorepo",
  "type": "module",
  "version": "65.4.3",
  "private": true,
  "packageManager": "pnpm@9.15.4",
  "scripts": {
    "prepare": "esno scripts/prepare.ts",
    "taze": "taze minor -wIr && pnpm -r --parallel run update-post",
    "bench": "npm -C bench run bench",
    "build": "rimraf packages/*/dist --glob && esno scripts/copy-files.ts && pnpm -r --filter=./packages-*/* run build && pnpm -r run build-post && esno scripts/postbuild.ts",
    "patch-pkg-pr-new": "esno scripts/patch-pkg-pr-new.ts",
    "dev": "nr stub",
    "deploy": "nr build && npm -C docs run docs:build && npm -C playground run build && npm -C interactive run build",
    "interactive": "npm -C interactive run dev",
    "docs": "npm -C docs run docs:dev",
    "inspector": "npm -C packages-integrations/inspector run dev",
    "play": "npm -C playground run dev",
    "lint": "eslint --cache .",
    "lint:fix": "nr lint --fix",
    "release": "bumpp -r --excute=\"pnpm i\"",
    "size": "esno scripts/size.ts",
    "stub": "pnpm -r --parallel run stub",
    "typecheck": "tsc --noEmit && pnpm -C packages-integrations/eslint-plugin run typecheck",
    "test": "vitest",
    "test:update": "vitest -u",
    "test:integration": "pnpm -F svelte-scoped test:integration",
    "test:ci": "nr build && nr typecheck && nr lint && nr test && nr test:integration",
    "test:attw": "pnpm --filter=!cli --filter=!reset --filter=!shared-* --filter=!vscode test:attw",
    "update:iconify-collections": "esno scripts/update-iconify-collections.ts"
  },
  "devDependencies": {
    "@antfu/eslint-config": "catalog:",
    "@antfu/ni": "catalog:",
    "@arethetypeswrong/cli": "catalog:",
    "@codemirror/lang-css": "catalog:",
    "@codemirror/lang-html": "catalog:",
    "@codemirror/lang-javascript": "catalog:",
    "@codemirror/lang-xml": "catalog:",
    "@iconify-json/carbon": "catalog:",
    "@iconify-json/iconoir": "catalog:",
    "@iconify-json/la": "catalog:",
    "@iconify-json/logos": "catalog:",
    "@iconify-json/mdi": "catalog:",
    "@iconify-json/ph": "catalog:",
    "@iconify-json/ri": "catalog:",
    "@iconify-json/tabler": "catalog:",
    "@iconify-json/teenyicons": "catalog:",
    "@iconify-json/twemoji": "catalog:",
    "@iconify-json/uim": "catalog:",
    "@iconify/json": "catalog:",
    "@shikijs/vitepress-twoslash": "catalog:",
    "@types/connect": "catalog:",
    "@types/css-tree": "catalog:",
    "@types/fs-extra": "catalog:",
    "@types/js-yaml": "catalog:",
    "@types/markdown-it-link-attributes": "catalog:",
    "@types/node": "catalog:",
    "@types/prettier": "catalog:",
    "@types/react": "catalog:",
    "@types/vscode": "^1.84.0",
    "@types/ws": "catalog:",
    "@unocss/astro": "workspace:*",
    "@unocss/autocomplete": "workspace:*",
    "@unocss/cli": "workspace:*",
    "@unocss/config": "workspace:*",
    "@unocss/core": "workspace:*",
    "@unocss/eslint-plugin": "workspace:*",
    "@unocss/extractor-pug": "workspace:*",
    "@unocss/postcss": "workspace:*",
    "@unocss/preset-attributify": "workspace:*",
    "@unocss/preset-icons": "workspace:*",
    "@unocss/preset-legacy-compat": "workspace:*",
    "@unocss/preset-mini": "workspace:*",
    "@unocss/preset-tagify": "workspace:*",
    "@unocss/preset-typography": "workspace:*",
    "@unocss/preset-uno": "workspace:*",
    "@unocss/preset-web-fonts": "workspace:*",
    "@unocss/preset-wind": "workspace:*",
    "@unocss/reset": "workspace:*",
    "@unocss/runtime": "workspace:*",
    "@unocss/transformer-directives": "workspace:*",
    "@unocss/transformer-variant-group": "workspace:*",
    "@unocss/vite": "workspace:*",
    "@unocss/webpack": "workspace:*",
    "@vitejs/plugin-legacy": "catalog:",
    "@vitejs/plugin-vue": "catalog:",
    "@vitest/ui": "catalog:",
    "@vueuse/core": "catalog:",
    "@vueuse/math": "catalog:",
    "brotli-size": "catalog:",
    "bumpp": "catalog:",
    "codemirror": "catalog:",
    "codemirror-theme-vars": "catalog:",
    "eslint": "catalog:",
    "eslint-plugin-antfu": "catalog:",
    "eslint-plugin-format": "^1.0.1",
    "eslint-vitest-rule-tester": "catalog:",
    "esno": "catalog:",
    "execa": "catalog:",
    "floating-vue": "catalog:",
    "fs-extra": "catalog:",
    "gzip-size": "catalog:",
    "jsdom": "catalog:",
    "lint-staged": "catalog:",
    "lz-string": "catalog:",
    "magic-string": "catalog:",
    "msw": "catalog:",
    "nuxt": "catalog:",
    "nuxt-tsconfig-stub": "catalog:",
    "pnpm": "catalog:",
    "postcss": "catalog:",
    "prettier": "catalog:",
    "prettier-plugin-svelte": "catalog:",
    "react": "catalog:",
    "read-yaml-file": "catalog:",
    "rimraf": "catalog:",
    "rollup": "catalog:",
    "semver": "catalog:",
    "simple-git-hooks": "catalog:",
    "splitpanes": "catalog:",
    "std-env": "catalog:",
    "svelte-eslint-parser": "catalog:",
    "taze": "catalog:",
    "terser": "catalog:",
    "tinyglobby": "catalog:",
    "tsup": "catalog:",
    "tsx": "catalog:",
    "typescript": "catalog:",
    "unbuild": "catalog:",
    "unocss": "workspace:*",
    "unplugin-auto-import": "catalog:",
    "unplugin-vue-components": "catalog:",
    "vite": "catalog:",
    "vite-plugin-inspect": "catalog:",
    "vite-plugin-pages": "catalog:",
    "vitest": "catalog:",
    "vue": "catalog:",
    "vue-router": "catalog:"
  },
  "pnpm": {
    "overrides": {
      "is-arguments": "npm:@nolyfill/is-arguments@^1.0.29",
      "is-core-module": "npm:@nolyfill/is-core-module@^1.0.39",
      "is-generator-function": "npm:@nolyfill/is-generator-function@^1.0.29",
      "is-regex": "npm:@nolyfill/is-regex@^1.0.29",
      "is-typed-array": "npm:@nolyfill/is-typed-array@^1.0.29",
      "object.assign": "npm:@nolyfill/object.assign@^1.0.28",
      "side-channel": "npm:@nolyfill/side-channel@^1.0.29",
      "which-typed-array": "npm:@nolyfill/which-typed-array@^1.0.29"
    }
  },
  "resolutions": {
    "@typescript-eslint/utils": "catalog:",
    "magic-string": "catalog:",
    "nuxt": "catalog:",
    "prettier": "catalog:",
    "rollup": "catalog:",
    "vite": "catalog:"
  },
  "simple-git-hooks": {
    "pre-commit": "npx esno scripts/prepare.ts && npx lint-staged"
  },
  "lint-staged": {
    "*.{js,ts,tsx,vue,md}": [
      "eslint --cache --fix"
    ]
  }
}
