name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  merge_group: {}

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [18.18.2, 22.14.0]
        include:
          - os: macos-latest
            node_version: 22.14.0
          - os: windows-latest
            node_version: 22.14.0
      fail-fast: false

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v4

      - name: Set node ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      # `npm i -g corepack@latest;` and  `corepack prepare pnpm@latest --activate;` are necessary to get the latest
      # version of corepack, which has a fix for https://github.com/nodejs/corepack/issues/612
      # (related https://github.com/pnpm/pnpm/issues/9029), so it can install pnpm.
      # Those two can probably go away once the devcontainer is using a version of Node which includes a version corepack
      # with the fix.

      - run: echo "corepack version => $(corepack --version)"

      # - run: npm i -g corepack@latest --force
      - run: corepack enable

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Build
        run: nr build

      - name: Test
        run: nr test

      - name: Typecheck
        run: nr typecheck

      - name: Check types
        if: runner.os == 'Linux' && matrix.node_version == '22.14.0'
        run: nr test:attw
